datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  following     Follow[]    @relation("following")
  followers     Follow[]    @relation("followers")
  profile       Profile?     
  role          Role        @default(STUDENT)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Profile {
  bio         String 
  imageUrl    String     
  userId      String     @unique
  user        User       @relation(fields: [userId], references: [id])
}

model Follow {
  id           String      @unique 
  followingId  String      
  followersId  String 

  following    User        @relation(name: "following", fields: [followingId], references: [id], onDelete: Cascade)
  followers    User        @relation(name: "followers", fields: [followersId], references: [id], onDelete: Cascade)

  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@unique([followersId, followingId])
  @@index([followingId])
  @@index([followersId])

}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
    STUDENT
    EDUCATOR
}
